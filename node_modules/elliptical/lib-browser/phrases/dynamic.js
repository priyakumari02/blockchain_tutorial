'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = require('../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [optionsForString, traversesForSubstrings, visit].map(_regenerator2.default.mark);

function optionsForString(string, option, element, traverse) {
  var description;
  return _regenerator2.default.wrap(function optionsForString$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          description = element.props.describe ? element.props.describe(string, option) : undefined;

          if (!description) {
            _context.next = 3;
            break;
          }

          return _context.delegateYield(traverse(description, option), 't0', 3);

        case 3:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this);
}

function traversesForSubstrings(option, element, traverse) {
  var iterations, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, substring;

  return _regenerator2.default.wrap(function traversesForSubstrings$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          iterations = option.text == null ? [undefined] : (0, _utils.substrings)(option.text, element.props);
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context2.prev = 4;
          _iterator = iterations[Symbol.iterator]();

        case 6:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context2.next = 13;
            break;
          }

          substring = _step.value;
          _context2.next = 10;
          return optionsForString(substring, option, element, traverse);

        case 10:
          _iteratorNormalCompletion = true;
          _context2.next = 6;
          break;

        case 13:
          _context2.next = 19;
          break;

        case 15:
          _context2.prev = 15;
          _context2.t0 = _context2['catch'](4);
          _didIteratorError = true;
          _iteratorError = _context2.t0;

        case 19:
          _context2.prev = 19;
          _context2.prev = 20;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 22:
          _context2.prev = 22;

          if (!_didIteratorError) {
            _context2.next = 25;
            break;
          }

          throw _iteratorError;

        case 25:
          return _context2.finish(22);

        case 26:
          return _context2.finish(19);

        case 27:
        case 'end':
          return _context2.stop();
      }
    }
  }, _marked[1], this, [[4, 15, 19, 27], [20,, 22, 26]]);
}

function visit(option, element, traverse) {
  var traverses;
  return _regenerator2.default.wrap(function visit$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          traverses = traversesForSubstrings(option, element, traverse);
          return _context3.delegateYield((0, _utils.limitIterator)(traverses, element.props.limit), 't0', 2);

        case 2:
        case 'end':
          return _context3.stop();
      }
    }
  }, _marked[2], this);
}

exports.default = { visit: visit };